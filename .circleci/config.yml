# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:11.15.0

      - image: circleci/mongo:4.2.3
        command: [mongod, --bind_ip_all]
      #  #command: [mongod, --bind_ip_all, --replSet, rs0]


      - image: circleci/redis:4.0.10
      - image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
        environment:
          - cluster.name: group-project-test-cluster
          - xpack.security.enabled: false
          - transport.host: localhost
          - network.host: 127.0.0.1
          - http.port: 9250
          - discovery.type: single-node

      - image: brandembassy/rabbitmq:latest
        environment:
          RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
          RABBITMQ_DEFAULT_USER: "guest"
          RABBITMQ_DEFAULT_PASS: "guest"
          RABBITMQ_DEFAULT_VHOST: "/"
        ports:
          - "15672:15672"
          - "5672:5672"

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/Jumentix 

    steps:
      - checkout

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0

      - run:
          name: Wait for Redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m

      

      # Download and cache dependencies
      #- restore_cache:
      #    keys:
      #      - v1-dependencies-{{ checksum "package.json" }}
      #      # fallback to using the latest cache if no exact match is found
      #      - v1-dependencies-

      

      #- run: sudo apt-get update

      #- run: sudo apt-get install -y mongodb-org

      #- run: sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4 

      #- run:
      #    name: Run Mongo Replicaset
      #    command: echo 'deb http://repo.mongodb.org/apt/debian/ jessie/mongodb-org/4.0 main' | sudo tee /etc/apt/sources.list.d/mongodb-org.list && sudo apt-get update && sudo apt-get install -y libssl-dev && sudo apt-get upgrade libssl-dev && sudo apt-get update && sudo apt-get install -y mongodb-org-shell && mongo mongodb://localhost:27017 --eval 'rs.initiate()'
      #- run:
      #    name: Install and Run Mongo Replicaset
      #    command: npm install run-rs && node_modules/.bin/run-rs -v 4.2.3
      #    background: true
      - run:
          name: Install Application
          command: npm install

      #- save_cache:
      #    paths:
      #      - node_modules
      #    key: v1-dependencies-{{ checksum "package.json" }}

      #- run: mongod --shutdown

      # run tests!
      
      - run: npm run build

      #- run: ls /home/circleci/Jumentix /

      #- run: ls /home/circleci/Jumentix /dist/

      #- run: ls /home/circleci/Jumentix /dist/lib/

      #- run: ls /home/circleci/Jumentix /dist/lib/models/mongoose/hooks/

      #- run: rabbitmqctl add_user JumentiX JumentiX
      #- run: rabbitmqctl set_user_tags JumentiX administrator
      #- run: rabbitmqctl set_permissions -p / JumentiX ".*" ".*" ".*"

      - run: bash <(curl -s https://codecov.io/bash)

      # - run: sleep 10 && export NODE_ENV=CI && node_modules/.bin/nodemon /home/circleci/Jumentix/dist/app.js



      - run: sleep 10 && export NODE_ENV=CI && npm run test
